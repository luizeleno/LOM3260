I"›<p>Calcule uma aproxima√ß√£o para $\cos x$ atrav√©s da s√©rie</p>

\[\small
\cos x = 1 - \frac{x^2}{2!} + \frac{x^4}{4!} - \frac{x^6}{6!} + \ldots\]

<p>at√© que o m√≥dulo do √∫ltimo termo seja menor que $10^{-6}$. O usu√°rio deve fornecer o valor de $x$. N√£o use a fun√ß√£o fatorial, pois isso √© desperd√≠cio de tempo de processamento, j√° que boa parte das opera√ß√µes para o c√°lculo de um termo da s√©rie j√° foi feita para o termo anterior!</p>

<!-- more -->

<h3 id="solu√ß√£o">Solu√ß√£o</h3>

<p>Vou criar uma fun√ß√£o que pede como argumentos o valor de $x$ e, opcionalmente, a precis√£o do √∫ltimo termo (padr√£o: $10^{-6}$). Al√©m disso, confere as unidades de $x$ ‚Äìgraus ou radianos‚Äì, considerando radianos por padr√£o.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>


<span class="k">def</span> <span class="nf">cos_serie</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">tol</span><span class="o">=</span><span class="mf">1.e-6</span><span class="p">,</span> <span class="n">unid</span><span class="o">=</span><span class="s">'rad'</span><span class="p">):</span>

  <span class="s">'''
    cos_serie calcula cos(x) por s√©rie de Taylor com uma toler√¢ncia no n√∫mero de termos

    entrada:
      - x (obrigat√≥rio): float de que se deseja calcular o cosseno
      - tol (opcional): m√≥dulo do √∫timo termo √© menor do que isso
      - unid (opcional): unidade de x.
          Op√ß√µes:
            - 'rad' (padr√£o): x em radianos
            - 'graus': x em graus
  '''</span>

  <span class="n">x0</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">pi</span> <span class="o">/</span> <span class="mi">180</span> <span class="k">if</span> <span class="n">unid</span> <span class="o">==</span> <span class="s">'graus'</span> <span class="k">else</span> <span class="n">x</span>

  <span class="n">termo</span><span class="p">,</span> <span class="n">soma</span> <span class="o">=</span> <span class="mf">1.</span><span class="p">,</span> <span class="mf">1.</span>
  <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span>
  <span class="k">while</span> <span class="nb">abs</span><span class="p">(</span><span class="n">termo</span><span class="p">)</span> <span class="o">&gt;</span> <span class="n">tol</span><span class="p">:</span>
    <span class="n">termo</span> <span class="o">*=</span> <span class="o">-</span><span class="n">x0</span><span class="o">*</span><span class="n">x0</span> <span class="o">/</span> <span class="n">a</span> <span class="o">/</span> <span class="n">b</span>
    <span class="n">soma</span> <span class="o">+=</span> <span class="n">termo</span>
    <span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">a</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span> <span class="n">b</span><span class="o">+</span><span class="mi">2</span>

  <span class="k">return</span> <span class="n">soma</span>


<span class="c1"># usando a fun√ß√£o
</span><span class="n">x</span> <span class="o">=</span> <span class="nb">float</span><span class="p">(</span><span class="nb">input</span><span class="p">(</span><span class="s">'x='</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">'cos(</span><span class="si">{</span><span class="n">x</span><span class="si">}</span><span class="s">) = </span><span class="si">{</span><span class="n">cos_serie</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="si">}</span><span class="s">'</span><span class="p">)</span>

</code></pre></div></div>
:ET