I"‡<p class="lead">Dois conceitos fundamentais em programa√ß√£o: objetos e vari√°veis</p>

<!-- ## Conte√∫do
{: .no_toc .text-delta }

1. TOC
{:toc} -->

<h2 id="o-que-s√£o-objetos-e-tipos">O que s√£o <em>objetos</em> e <em>tipos</em>?</h2>

<p>O conceito de <strong>objeto</strong> em programa√ß√£o √© um daqueles dif√≠ceis de explicar em palavras, mas f√°cil de entender na pr√°tica. Objetos s√£o dados que o seu programa python manipula para realizar as tarefas necess√°rias para atingir o seu objetivo. Os objetos podem ser de diversos <strong>tipos</strong> (<em>types</em>): n√∫meros inteiros (<code class="language-plaintext highlighter-rouge">int</code>), n√∫meros em ponto flutuante (<code class="language-plaintext highlighter-rouge">float</code>), sequ√™ncias de caracteres (<code class="language-plaintext highlighter-rouge">string</code>), listas (<strong>list</strong>), dicion√°rios (<strong>dict</strong>), e muitos outros tipos.</p>

<h2 id="e-o-que-s√£o-vari√°veis">E o que s√£o vari√°veis?</h2>

<p>Ao criar um objeto de qualquer tipo, √© preciso guard√°-lo em algum lugar na mem√≥ria (RAM) do computador, para que o c√≥digo consiga acess√°-lo sempre que necess√°rio. A esse processo d√°-se o nome de <strong>atribui√ß√£o</strong> de um dado a uma <strong>vari√°vel</strong>. Por exemplo,</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="mi">2</span>
</code></pre></div></div>
<p>significa que atribu√≠mos um dado do tipo <code class="language-plaintext highlighter-rouge">int</code> (e igual a 2) a uma vari√°vel que batizamos de <code class="language-plaintext highlighter-rouge">a</code>. Leia <code class="language-plaintext highlighter-rouge">a=2</code> como ‚Äú<code class="language-plaintext highlighter-rouge">a</code> recebe <code class="language-plaintext highlighter-rouge">2</code>‚Äù (e n√£o ‚Äúa igual a 2‚Äù). O s√≠mbolo <code class="language-plaintext highlighter-rouge">=</code>, nesse contexto, √© chamado de <strong>operador de atribui√ß√£o</strong>, e n√£o <em>igual</em>. Refor√ßando: n√£o se trata de igualdade, e sim atribui√ß√£o de valores. Ap√≥s a atribui√ß√£o, o <code class="language-plaintext highlighter-rouge">int</code> 2 est√° guardado em algum lugar da mem√≥ria, que chamamos de <code class="language-plaintext highlighter-rouge">a</code>. Seu c√≥digo pode acess√°-lo sempre que precisar apenas usando o nome da vari√°vel. Por exemplo, no c√≥digo abaixo,</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="mi">2</span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">3</span> <span class="o">*</span> <span class="n">a</span>
</code></pre></div></div>
<p>atribuimos o valor <code class="language-plaintext highlighter-rouge">3 * a</code> √† vari√°vel <code class="language-plaintext highlighter-rouge">b</code>. Como, no ponto do c√≥digo em que ocorre a linha <code class="language-plaintext highlighter-rouge">b = 3 * a</code>, na vari√°vel <code class="language-plaintext highlighter-rouge">a</code> est√° guardado o valor <code class="language-plaintext highlighter-rouge">2</code>, segue que <code class="language-plaintext highlighter-rouge">b</code> recebe <code class="language-plaintext highlighter-rouge">6</code>.</p>

<p>Tome cuidado, no entanto, com o s√≠mbolo <code class="language-plaintext highlighter-rouge">=</code> usado para atribui√ß√£o, pois iniciantes (e alguns que se dizem <em>experts</em>) frequentemente se confundem, pois est√£o muito mais acostumados a entender o sinal de <code class="language-plaintext highlighter-rouge">=</code> como representando igualdade. Por exemplo, analise o seguinte c√≥digo:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="mi">2</span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">3</span> <span class="o">*</span> <span class="n">a</span>
<span class="n">a</span> <span class="o">=</span> <span class="mi">5</span>
<span class="nf">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
</code></pre></div></div>
<p>O que voc√™ acha que ser√° impresso pelo comando <code class="language-plaintext highlighter-rouge">print</code>? Veja, na √∫ltima vez que o python atribuiu algum objeto √† vari√°vel <code class="language-plaintext highlighter-rouge">b</code> (na segunda linha), esse objeto era o <code class="language-plaintext highlighter-rouge">int</code> 6. Ao alterar o valor guardado em <code class="language-plaintext highlighter-rouge">a</code>, o que estava em <code class="language-plaintext highlighter-rouge">b</code> n√£o √© alterado. Portanto, o comando <code class="language-plaintext highlighter-rouge">print(b)</code> imprime na tela o valor <code class="language-plaintext highlighter-rouge">6</code>. Ou seja, se voc√™ alterar o valor guardado numa vari√°vel, n√£o esque√ßa de alterar as vari√°veis que dependem dela! Repare que a√≠ est√° o motivo do nome <em>vari√°vel</em>: o valor guardado em certo lugar da mem√≥ria pode variar!</p>

<p class="alert alert-primary">:information_source: Mais detalhes sobre o comando <code class="language-plaintext highlighter-rouge">print</code> (imprimir) s√£o encontrados na p√°gina <a href="/LOM3260/material/tema1/05-saida.html">Sa√≠da com print()</a></p>

<p>Outra maneira de usar o operador de atribui√ß√£o (<code class="language-plaintext highlighter-rouge">=</code>) que causa confus√£o entre iniciantes em programa√ß√£o √© algo como o seguinte c√≥digo:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="mi">2</span>
<span class="n">a</span> <span class="o">=</span> <span class="n">a</span> <span class="o">+</span> <span class="mi">1</span>
<span class="nf">print</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</code></pre></div></div>
<p>Qual o valor impresso? Bom, na primeira linha, atribu√≠mos o <code class="language-plaintext highlighter-rouge">int</code> 2 √† vari√°vel <code class="language-plaintext highlighter-rouge">a</code>. Na segunda linha, somamos 1 ao valor guardado em <code class="language-plaintext highlighter-rouge">a</code> (2), cujo resultado √© obviamente 3. Esse valor √© ent√£o atribu√≠do novamente √† vari√°vel <code class="language-plaintext highlighter-rouge">a</code>, ou seja, guardamos esse novo resultado no mesmo lugar da mem√≥ria, atualizando seu valor. Com efeito, o que fizemos foi basicamente alterar o objeto guardado na vari√°vel <code class="language-plaintext highlighter-rouge">a</code>.</p>
:ET