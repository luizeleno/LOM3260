I"û <p>A maioria dos anos tem 365 dias. No entanto, o tempo necess√°rio para a Terra orbitar o Sol √© na verdade um pouco maior que isso. Para corrigir essa diferen√ßa, um dia extra, 29 de fevereiro, est√° inclu√≠do em alguns anos, ditos bissextos. As regras para determinar se um ano √© ou n√£o um ano bissexto s√£o as seguintes:</p>

<table>
  <tbody>
    <tr>
      <td>1. qualquer ano que seja divis√≠vel por 400 √© um ano bissexto;</td>
    </tr>
    <tr>
      <td>2. dos anos restantes, qualquer ano que seja divis√≠vel por 100 n√£o √© um ano bissexto;</td>
    </tr>
    <tr>
      <td>3. dos anos restantes, qualquer ano que seja divis√≠vel por 4 √© um ano bissexto;</td>
    </tr>
    <tr>
      <td>4. todos os outros anos n√£o s√£o anos bissextos.</td>
    </tr>
  </tbody>
</table>

<p>Escreva um programa que leia um ano do usu√°rio e exiba uma mensagem dizendo se ele √© ou n√£o um ano bissexto. Voc√™ consegue pensar num algoritmo mais eficiente, que fa√ßa em m√©dia menos testes?</p>

<h3 id="dicas-para-responder-√†-pergunta-final">Dicas para responder √† pergunta final:</h3>
<ul>
  <li>Veja que o algoritmo proposto no enunciado testa inicialmente se um n√∫mero √© m√∫ltiplo de 400. Apenas um em 400 n√∫meros √© m√∫ltiplo de 400. Portanto, 399 de 400 (99.75%) n√£o passam no primeiro teste e v√£o para o segundo.</li>
  <li>Similarmente, um a cada 100 n√∫meros √© m√∫ltiplo de 100, ent√£o 99 de 100 (99%) n√£o passam pelo segundo teste e v√£o para o terceiro.</li>
  <li>Assim, em m√©dia, o algoritmo proposto faz muito mais compara√ß√µes do que o necess√°rio. Repensando os testes a serem feitos, √© poss√≠vel reduzi-los em n√∫mero. Por exemplo, se voc√™ come√ßar com o teste <code class="language-plaintext highlighter-rouge">ano % 4 != 0</code>, 3 de 4 casos resultam em <code class="language-plaintext highlighter-rouge">True</code>, ou seja, esse √© o √∫nico teste que voc√™ precisaria fazer em 75% dos casos.</li>
</ul>

<!-- more -->

<h2 id="solu√ß√£o">Solu√ß√£o</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Entrada de dados
</span>
<span class="n">ano</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="s">'Digite o ano: '</span><span class="p">)</span>

<span class="c1"># C√≥digo - algoritmos
</span>
<span class="n">ano</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">ano</span><span class="p">)</span> <span class="c1"># convertendo ano de string para int
</span>
<span class="k">if</span> <span class="n">ano</span> <span class="o">%</span> <span class="mi">400</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># √© m√∫ltiplo de 400
</span>    <span class="n">resultado</span> <span class="o">=</span> <span class="bp">True</span>
<span class="k">elif</span> <span class="n">ano</span> <span class="o">%</span> <span class="mi">100</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># √© m√∫ltiplo de 100
</span>    <span class="n">resultado</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">elif</span> <span class="n">ano</span> <span class="o">%</span> <span class="mi">4</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># √© m√∫ltiplo de 4
</span>    <span class="n">resultado</span> <span class="o">=</span> <span class="bp">True</span>
<span class="k">else</span><span class="p">:</span>  <span class="c1"># n√£o √© m√∫ltiplo de 4
</span>    <span class="n">resultado</span> <span class="o">=</span> <span class="bp">False</span>

<span class="c1"># Sa√≠da de dados
</span>
<span class="k">if</span> <span class="n">resultado</span> <span class="o">==</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">res</span> <span class="o">=</span> <span class="s">'√©'</span>
<span class="k">else</span><span class="p">:</span>
    <span class="n">res</span> <span class="o">=</span> <span class="s">'n√£o √©'</span>

<span class="n">s</span> <span class="o">=</span> <span class="s">f'</span><span class="si">{</span><span class="n">ano</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">res</span><span class="si">}</span><span class="s"> bissexto'</span> <span class="c1"># mensagem formatada
</span><span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="an√°lise-da-solu√ß√£o">An√°lise da Solu√ß√£o</h3>

<p>Dado que, de cada 400 n√∫meros, 100 (25%) s√£o divis√≠veis por 4, 1 (0.25%) √© divis√≠vel por 400 e 3 (0.75%) s√£o divis√≠veis por 100 mas n√£o por 400, concluimos que, de todos os anos poss√≠veis,</p>
<ul>
  <li>0.25%: apenas um teste (<code class="language-plaintext highlighter-rouge">if</code>) √© necess√°rio;</li>
  <li>0.75%: dois testes (<code class="language-plaintext highlighter-rouge">if</code> e 1¬∫ <code class="language-plaintext highlighter-rouge">elif</code>) s√£o necess√°rios;</li>
  <li>99%: tr√™s testes (24% passam no teste do 2¬∫ <code class="language-plaintext highlighter-rouge">elif</code> e 75% v√£o para o <code class="language-plaintext highlighter-rouge">else</code>) s√£o necess√°rios.</li>
</ul>

<p>O n√∫mero m√©dio de testes √© ent√£o</p>

\[N = 1 \times \frac{0.25}{100} + 2 \times \frac{0.75}{100} + 3 \times \frac{99}{100} = 2.9875\]

<p>Esse √© um n√∫mero de testes muito alto para um problema t√£o simples. Portanto, o algoritmo proposto no enunciado n√£o √© muito eficiente.</p>

<h2 id="solu√ß√£o-otimizada">Solu√ß√£o otimizada</h2>

<p>Com as dicas do enunciado e usando a constru√ß√£o <code class="language-plaintext highlighter-rouge">if elif else</code>, a melhor solu√ß√£o para o problema (<em>melhor</em> no sentido estat√≠stico, ou seja, aquela que faz, em m√©dia, menos testes) √© a seguinte:</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">ano</span> <span class="o">%</span> <span class="mi">4</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># n√£o √© m√∫ltiplo de 4
</span>    <span class="n">resultado</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">elif</span> <span class="n">ano</span> <span class="o">%</span> <span class="mi">100</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># √© multiplo de 4 mas n√£o de 100
</span>    <span class="n">resultado</span> <span class="o">=</span> <span class="bp">True</span>
<span class="k">elif</span> <span class="n">ano</span> <span class="o">%</span> <span class="mi">400</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># √© m√∫ltiplo de 100 mas n√£o de 400
</span>    <span class="n">resultado</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">else</span><span class="p">:</span>  <span class="c1"># √© m√∫ltiplo de 400
</span>    <span class="n">resultado</span> <span class="o">=</span> <span class="bp">True</span>
</code></pre></div></div>

<p>Vamos fazer a an√°lise novamente. De todos os anos poss√≠veis,</p>
<ul>
  <li>75%: apenas um teste (<code class="language-plaintext highlighter-rouge">if</code>) √© necess√°rio;</li>
  <li>24% dois testes (<code class="language-plaintext highlighter-rouge">if</code> e 1¬∫ <code class="language-plaintext highlighter-rouge">elif</code>) s√£o necess√°rios;</li>
  <li>1%: tr√™s testes (0.75% passam no teste do 2¬∫ <code class="language-plaintext highlighter-rouge">elif</code> e 0.25% v√£o para o <code class="language-plaintext highlighter-rouge">else</code>) s√£o necess√°rios.</li>
</ul>

<p>O n√∫mero m√©dio de testes nesse caso √© ent√£o</p>

\[N = 1 \times \frac{75}{100} + 2 \times \frac{24}{100} + 3 \times \frac{1}{100} = 1.26\]

<p>Uma melhora excelente! Conseguimos reduzir em quase 60% o n√∫mero de compara√ß√µes, reduzindo de forma parecida o tempo de execu√ß√£o do c√≥digo. Pense no caso em que seu c√≥digo precisa ser rodado bilh√µes ou trilh√µes de vezes num √∫nico dia, qual seria a economia de energia e recursos!</p>
:ET