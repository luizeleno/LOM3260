I"È<p>O tri√¢ngulo de Pascal √© uma tabela de n√∫meros constru√≠da assim: o elemento da linha $i$ e coluna $j$ (com $0 \le j \le i$ e come√ßando de cima, onde $i=j=0$) √© dado por</p>

\[a_{i,j} =
 \begin{cases}
1 \quad \text{ se } j=0 \text{ ou }  j=i\\
a_{i-1,j} + a_{i-1,j-1} \,, \text{ se } 1 \lt j \lt  i
\end{cases}\]

<p>As primeiras oito linhas (ou seja, at√© $i=7$) s√£o mostradas abaixo:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  1
  1  1
  1  2  1
  1  3  3  1
  1  4  6  4  1
  1  5  10 10 5  1
  1  6  15 20 15 6  1
  1  7  21 35 35 21 7  1
</code></pre></div></div>

<ol>
  <li>Implemente um algoritmo para calcular as primeiras $n$ linhas do tri√¢ngulo de Pascal.</li>
  <li>Modifique o c√≥digo para substituir os n√∫meros √≠mpares do tri√¢ngulo por 1 e os pares por 0. Use um valor alto de $n$ (algo em torno de 500) e salve o resultado numa matriz. Por fim, use o comando <code class="language-plaintext highlighter-rouge">imshow()</code> do m√≥dulo <code class="language-plaintext highlighter-rouge">matplotlib.pyplot</code> para exibir graficamente o resultado, que √© muito parecido com o fractal chamado de <em>Tri√¢ngulo de Sierpinski</em> (clique <a href="https://pt.wikipedia.org/wiki/Tri%C3%A2ngulo_de_Sierpinski" target="blank">aqui</a> e veja na Wikipedia).</li>
</ol>

<!-- more -->

<p>Segue uma fun√ß√£o usando um <em>array</em>  em <code class="language-plaintext highlighter-rouge">numpy</code>:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>

<span class="k">def</span> <span class="nf">pascal</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="s">'''
    gera as N primeiras linhas do tri√¢ngulo de Pascal
    (supoe N inteiro n√£o-negativo)
    '''</span>
    <span class="n">v</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="n">N</span><span class="p">,</span> <span class="n">N</span><span class="p">))</span>  <span class="c1"># uma matriz NxN de 0'
</span>    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>  <span class="c1"># la√ßo para gerar as linhas
</span>        <span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="k">for</span> <span class="n">j</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>  <span class="c1"># la√ßo pelas colunas
</span>            <span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">v</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>

    <span class="k">return</span> <span class="n">v</span>
</code></pre></div></div>

<p>Para a segunda parte do exerc√≠cio, podemos usar a fun√ß√£o acima, aliada ao poder de arrays em numpy, e calcular diretamente o resto da divis√£o por 2. Isso automaticamente substituir√° n√∫meros pares por 0 e √≠mpares por 1:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span> <span class="o">=</span> <span class="mi">500</span>
<span class="n">tri</span> <span class="o">=</span> <span class="nf">pascal</span><span class="p">(</span><span class="n">N</span><span class="p">)</span> <span class="o">%</span> <span class="mi">2</span>

<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">()</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">imshow</span><span class="p">(</span><span class="n">tri</span><span class="p">,</span> <span class="n">interpolation</span><span class="o">=</span><span class="s">'none'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p class="alert alert-warning">:exclamation: √â um bom h√°bito de programa√ß√£o carregar todos os m√≥dulos no come√ßo do arquivo, e n√£o fazer como no exemplo acima, em que carreguei o m√≥dulo <code class="language-plaintext highlighter-rouge">matplotlib.pyplot</code> no meio do c√≥digo (um exemplo do ditado <em>fa√ßa o que eu digo, n√£o fa√ßa o que eu fa√ßo‚Ä¶</em>).</p>

<p>O resultado √© a imagem abaixo:</p>

<div class="text-center">
<figure class="figure">
  
  <a href="#" data-toggle="modal" data-target="#pascaltri">
  
    <img class="figure-img img-fluid rounded mx-auto" src="/LOM3260/assets/images/sierpinski-pascal.png" alt="Pascal modificado - Sierpinski" title="Pascal modificado - Sierpinski" />
  
  </a>
  
  
  <figcaption class="figure-caption">
    Pascal modificado - Sierpinski
  </figcaption>
  

<!-- Modal -->

<div class="modal fade" id="pascaltri" tabindex="-1" role="dialog" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header text-light bg-dark">
        <h5>Pascal modificado - Sierpinski</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span class="text-light" aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <a id="no-ext-link" href="/LOM3260/assets/images/sierpinski-pascal.png" target="_blank">
        <img class="figure-img img-fluid rounded w-100mx-auto" src="/LOM3260/assets/images/sierpinski-pascal.png" alt="Pascal modificado - Sierpinski" title="Pascal modificado - Sierpinski" />
        </a>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">OK</button>
      </div>
    </div>
  </div>
</div>


</figure>
</div>

:ET